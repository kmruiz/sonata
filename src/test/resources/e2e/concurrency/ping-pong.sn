requires std.io

entity class pinger() {
    let ping(ponger: ponger, time: number) = {
        println(time + '> ping')
        ponger.pong(self, time)
    }

    let ping(ponger: ponger, time == 2) = {
        println('ping end')
        ponger.pong(self, time)
        self.stop()
    }
}

entity class ponger() {
    let pong(pinger: pinger, time: number) = {
        println(time + '> pong')
        pinger.ping(self, time + 1)
    }

    let pong(pinger: pinger, time == 2) = {
        println('pong end')
        self.stop()
    }
}

let _pinger = pinger()
let _ponger = ponger()

_pinger.ping(_ponger, 0)
println('doing things asynchronously')
