"use strict";function _(){let y,x=new Promise(function(r){y=r});return[x,y]}function _$(p){return Array.prototype.slice.call(p)}function SI(a,b){return setInterval(a,b)}function CI(a){clearInterval(a)}let TIMES=10;function pinger(){let self={};self.class='pinger';self._mailbox=[];self._interval=SI(function(){if(self._mailbox.length>0){const x=self._mailbox.shift();x()}},0);self.stop=function stop(){const args = _$(arguments);const vs = _();const p = vs[0];const r = vs[1];self._mailbox.push(function () { r($stop$.apply(r, args));});return p;};function $stop$(){CI(self._interval);this()}self.ping=function ping(ponger,time){const args = _$(arguments);const vs = _();const p = vs[0];const r = vs[1];self._mailbox.push(function () { r(ping$.apply(r, args));});return p;};async function ping$(ponger, time){if(time===TIMES){console.log('ping end');ponger.pong(self,time);return await self.stop()}console.log(time+'> ping');return await ponger.pong(self,time)}return self;}function ponger(){let self={};self.class='ponger';self._mailbox=[];self._interval=SI(function(){if(self._mailbox.length>0){const x=self._mailbox.shift();x()}},0);self.stop=function stop(){const args = _$(arguments);const vs = _();const p = vs[0];const r = vs[1];self._mailbox.push(function () { r($stop$.apply(r, args));});return p;};function $stop$(){CI(self._interval);this()}self.pong=function pong(pinger,time){const args = _$(arguments);const vs = _();const p = vs[0];const r = vs[1];self._mailbox.push(function () { r(pong$.apply(r, args));});return p;};async function pong$(pinger, time){if(time===TIMES){console.log('pong end');return await self.stop()}console.log(time+'> pong');return await pinger.ping(self,time+1)}return self;}let _pinger=pinger();let _ponger=ponger();_pinger.ping(_ponger,0);console.log('doing things asynchronously');